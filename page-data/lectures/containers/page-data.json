{"componentChunkName":"component---src-pages-lectures-containers-index-mdx","path":"/lectures/containers/","result":{"pageContext":{"frontmatter":{"title":"Containers Lecture","description":"Containers Lecture"},"relativePagePath":"/lectures/containers/index.mdx","titleType":"page","MdxNode":{"id":"5f3a3ef1-ab04-5019-ba21-03925b69305c","children":[],"parent":"1a56fd25-e10b-59a1-8a69-c7b6c5f87535","internal":{"content":"---\ntitle: Containers Lecture\ndescription: Containers Lecture\n---\n\n# Containers\n\nContainers are a standard way to package an application and all its dependencies so that it can be moved between environments and run without change. They work by hiding the differences between applications inside the container so that everything outside the container can be standardized.\n\nFor example, Docker created standard way to create images for Linux Containers.\n\n## Resources\n\n<MiniCard title=\"Container Basics Presentation\" href=\"/slides/02-Containers-Basics.pdf\">\n</MiniCard>\n\n## References\n\n### Docker Commands\n\nBelow are some commands we use often on Docker.\n\n```\n# Know docker version\ndocker -version\n\n# Run a container\ndocker run <image>\n\n# List containers running\ndocker ps\n\n# Stop a container\ndocker stop <container-name|container-id>\n\n# Remove a container\ndocker rm <container-name|container-id>\n\n# Login into registry\ndocker login\n\n# Build an image\ndocker build <image_name>:<tag> .\n\n# Pull the image\ndocker pull <image_name>:<tag>\n\n# Push an image\ndocker push <image_name>:<tag>\n\n# List images\ndocker images\n```\n\nReference during live demo\n```\ndocker --version\ndocker version\ndocker run hello-world\ndocker run --name nginx bitnami/nginx\ndocker ps\ndocker ps -a\ndocker exec -it nginx bash\ndocker stop nginx\ndocker start nginx\ndocker stop nginx\ndocker rm nginx\ndocker run --name nginx bitnami/nginx\ndocker kill nginx\ndocker run --rm --name nginx -p 8080:8080 bitnami/nginx\ncurl http://localhost:8080\ndocker run --rm --name nginx -e USERNAME=Carlos -e PASSWORD=IlikeYAML -e LOG_LEVEL=ERROR -p 8080:8080 bitnami/nginx\ndocker exec -it nginx sh -c \"env | grep 'USERNAME\\|PASSWORD\\|LOG_LEVEL'\"\nmkdir -p assets; echo \"Welcome to the Cloud Native BootCamp\" > assets/index.html\ndocker run --rm --name nginx -p 8080:8080 -v $PWD/assets:/app bitnami/nginx\ndocker exec -it nginx sh -c \"cat /app/index.html\"\ncurl http://localhost:8080\ndocker inspect nginx\necho \"FROM bitnami/nginx\" > Dockerfile\necho \"COPY assets/index.html /app/index.html\" >> Dockerfile\ndocker build -t webserver:1.0 .\ndocker run --rm -p 8000:8080 webserver:1.0\ncurl http://localhost:8000\nDOCKERHUB_USER=csantanapr\ndocker tag webserver:1.0 $DOCKERHUB_USER/webserver:1.0\ndocker push $DOCKERHUB_USER/webserver:1.0\ndocker pull $DOCKERHUB_USER/webserver:1.0\ndocker run --rm -p 8000:8080 $DOCKERHUB_USER/webserver:1.0\ncurl http://localhost:8000\n```\n\n\n## Activities\n\n| Task                            | Description         | Link        | Time    |\n| --------------------------------| ------------------  |:----------- |---------|\n| *** Walkthroughs ***                         |         |         |     |\n| What is a Container? | A look under the the covers at what is a Linux Container? | <a href=\"https://www.katacoda.com/courses/container-runtimes/what-is-a-container\" target=\"_blank\">Understand Containers</a> | 10 min |\n| What is an Image? | A look under the the covers at what is a Linux Container Image? | <a href=\"https://www.katacoda.com/courses/container-runtimes/what-is-a-container-image\" target=\"_blank\">Container Images</a> | 10 min |\n| Docker Basics | Set of walkthroughs that cover docker basics | <a href=\"https://www.katacoda.com/courses/docker\" target=\"_blank\">Docker Basics</a> | 10 min |\n| *** Try It Yourself ***                         |         |         |     |\n| IBM Container Registry | Build and Deploy Run using IBM Container Registry  | [IBM Container Registry](./activities/ibmcloud-cr) | 30 min |\n| Docker Lab | Running a Sample Application on Docker | [Docker Lab](./activities/) | 30 min |\n\n\nOnce you have completed these tasks, you should have a base understanding of containers and how to use Docker.\n","type":"Mdx","contentDigest":"15b0216691771fc615f45038d85bf723","counter":564,"owner":"gatsby-plugin-mdx"},"exports":[],"rawBody":"---\ntitle: Containers Lecture\ndescription: Containers Lecture\n---\n\n# Containers\n\nContainers are a standard way to package an application and all its dependencies so that it can be moved between environments and run without change. They work by hiding the differences between applications inside the container so that everything outside the container can be standardized.\n\nFor example, Docker created standard way to create images for Linux Containers.\n\n## Resources\n\n<MiniCard title=\"Container Basics Presentation\" href=\"/slides/02-Containers-Basics.pdf\">\n</MiniCard>\n\n## References\n\n### Docker Commands\n\nBelow are some commands we use often on Docker.\n\n```\n# Know docker version\ndocker -version\n\n# Run a container\ndocker run <image>\n\n# List containers running\ndocker ps\n\n# Stop a container\ndocker stop <container-name|container-id>\n\n# Remove a container\ndocker rm <container-name|container-id>\n\n# Login into registry\ndocker login\n\n# Build an image\ndocker build <image_name>:<tag> .\n\n# Pull the image\ndocker pull <image_name>:<tag>\n\n# Push an image\ndocker push <image_name>:<tag>\n\n# List images\ndocker images\n```\n\nReference during live demo\n```\ndocker --version\ndocker version\ndocker run hello-world\ndocker run --name nginx bitnami/nginx\ndocker ps\ndocker ps -a\ndocker exec -it nginx bash\ndocker stop nginx\ndocker start nginx\ndocker stop nginx\ndocker rm nginx\ndocker run --name nginx bitnami/nginx\ndocker kill nginx\ndocker run --rm --name nginx -p 8080:8080 bitnami/nginx\ncurl http://localhost:8080\ndocker run --rm --name nginx -e USERNAME=Carlos -e PASSWORD=IlikeYAML -e LOG_LEVEL=ERROR -p 8080:8080 bitnami/nginx\ndocker exec -it nginx sh -c \"env | grep 'USERNAME\\|PASSWORD\\|LOG_LEVEL'\"\nmkdir -p assets; echo \"Welcome to the Cloud Native BootCamp\" > assets/index.html\ndocker run --rm --name nginx -p 8080:8080 -v $PWD/assets:/app bitnami/nginx\ndocker exec -it nginx sh -c \"cat /app/index.html\"\ncurl http://localhost:8080\ndocker inspect nginx\necho \"FROM bitnami/nginx\" > Dockerfile\necho \"COPY assets/index.html /app/index.html\" >> Dockerfile\ndocker build -t webserver:1.0 .\ndocker run --rm -p 8000:8080 webserver:1.0\ncurl http://localhost:8000\nDOCKERHUB_USER=csantanapr\ndocker tag webserver:1.0 $DOCKERHUB_USER/webserver:1.0\ndocker push $DOCKERHUB_USER/webserver:1.0\ndocker pull $DOCKERHUB_USER/webserver:1.0\ndocker run --rm -p 8000:8080 $DOCKERHUB_USER/webserver:1.0\ncurl http://localhost:8000\n```\n\n\n## Activities\n\n| Task                            | Description         | Link        | Time    |\n| --------------------------------| ------------------  |:----------- |---------|\n| *** Walkthroughs ***                         |         |         |     |\n| What is a Container? | A look under the the covers at what is a Linux Container? | <a href=\"https://www.katacoda.com/courses/container-runtimes/what-is-a-container\" target=\"_blank\">Understand Containers</a> | 10 min |\n| What is an Image? | A look under the the covers at what is a Linux Container Image? | <a href=\"https://www.katacoda.com/courses/container-runtimes/what-is-a-container-image\" target=\"_blank\">Container Images</a> | 10 min |\n| Docker Basics | Set of walkthroughs that cover docker basics | <a href=\"https://www.katacoda.com/courses/docker\" target=\"_blank\">Docker Basics</a> | 10 min |\n| *** Try It Yourself ***                         |         |         |     |\n| IBM Container Registry | Build and Deploy Run using IBM Container Registry  | [IBM Container Registry](./activities/ibmcloud-cr) | 30 min |\n| Docker Lab | Running a Sample Application on Docker | [Docker Lab](./activities/) | 30 min |\n\n\nOnce you have completed these tasks, you should have a base understanding of containers and how to use Docker.\n","frontmatter":{"title":"Containers Lecture","description":"Containers Lecture"},"fileAbsolutePath":"/home/travis/build/ibm-cloud-architecture/learning-cloudnative-101/src/pages/lectures/containers/index.mdx"}}},"staticQueryHashes":["1364590287","2102389209","2102389209","2456312558","2746626797","2746626797","3018647132","3018647132","3037994772","3037994772","63531786","63531786","768070550"]}